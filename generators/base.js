const Generator = require('yeoman-generator');

const nodeConfig = require('../package.json');

const StringUtility = require('./StringUtility');

module.exports = class BaseGenerator extends Generator {

    constructor(args, opts) {
        super(args, opts);

        this.strings = new StringUtility();
        
        this._logLevel = 1;

        this.LOG_DEBUG = 0;
        this.LOG_INFO = 1;
        this.LOG_WARNING = 2;
        this.LOG_ERROR = 3;

        this.option('log', { type: Number, default: 1, desc: 'Set the log level (0=debug, 1=info, 2=warn, 3=error)' });
    }

    setLogLevel(lvl) {
        this._logLevel = lvl;
    }

    logDebug() {
        if (this._logLevel == this.LOG_DEBUG) {
            this.log.apply(this, arguments);
        }
    }

    logInfo() {
        if (this._logLevel <= this.LOG_INFO) {
            this.log.apply(this, arguments);
        }
    }

    logWarning() {
        if (this._logLevel <= this.LOG_WARNING) {
            this.log.apply(this, arguments);
        }
    }

    logError() {
        if (this._logLevel <= this.LOG_ERROR) {
            this.log.apply(this, arguments);
        }
    }

    _getLogLevelName(lvl) {
        switch(lvl) {
            case this.LOG_DEBUG: return 'debug';
            case this.LOG_INFO: return 'info';
            case this.LOG_WARNING: return 'warning';
            case this.LOG_ERROR: return 'error';
            default: return `unknown ($lvl)`;
        }
    }

    configuring() {

        this.logDebug('configuring()...');

        this.logInfo('LOG LEVEL: ' + this._getLogLevelName(this.options.log));
        this.setLogLevel(this.options.log);

        this.config.set('version', nodeConfig.version);
        this.config.set('description', `This project was generated by the project "${nodeConfig.name}"`);
        this.config.save();

        this.logDebug('Configured!');
    }
};
